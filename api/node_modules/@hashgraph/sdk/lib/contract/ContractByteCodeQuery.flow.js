/**
 * Flowtype definitions for ContractByteCodeQuery
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 */

/**
 * @namespace proto
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IQuery">} IQuery
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IQueryHeader">} IQueryHeader
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IResponse">} IResponse
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IResponseHeader">} IResponseHeader
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IContractGetBytecodeQuery">} IContractGetBytecodeQuery
 * @typedef {$PropertyType<$Exports<"@hashgraph/proto">, "IContractGetBytecodeResponse">} IContractGetBytecodeResponse
 */
/**
 * @typedef {$PropertyType<$Exports<"../channel/Channel.js">, "default">} Channel
 */
/**
 * @augments
 */
declare export default class ContractByteCodeQuery mixins Query<Uint8Array> {
  /**
   * @internal
   * @param {proto$IQuery} query
   * @returns {ContractByteCodeQuery}
   */
  static _fromProtobuf(query: proto$IQuery): ContractByteCodeQuery;

  /**
   * @param {object} properties
   * @param {ContractId | string} [properties.contractId]
   */
  constructor(properties?: {
    contractId: string | ContractId | void,
    ...
  }): this;

  /**
   * @returns {?ContractId}
   */
  contractId: ContractId | null;

  /**
   * Set the contract ID for which the info is being requested.
   * @param {ContractId | string} contractId
   * @returns {ContractByteCodeQuery}
   */
  setContractId(contractId: ContractId | string): ContractByteCodeQuery;
}
export type Channel = $PropertyType<
  $Exports<"../channel/Channel.js">,
  "default"
>;
import Query from "../query/Query.js";
import ContractId from "./ContractId.js";
declare type proto$IQuery = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IQueryHeader = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IResponse = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IResponseHeader = $Exports<"@hashgraph/proto/lib/proto">;

declare type proto$IContractGetBytecodeQuery = $Exports<
  "@hashgraph/proto/lib/proto"
>;

declare type proto$IContractGetBytecodeResponse = $Exports<
  "@hashgraph/proto/lib/proto"
>;
declare export {};
